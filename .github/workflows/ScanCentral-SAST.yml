name: Fortify ScanCentral SAST Scan
on:
  workflow_dispatch:
  # Master or main branch that you want to trigger this workflow for
  push:
    branches: [v8.2.2]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [v8.2.2]
jobs:                                                  
  Fortify-SAST:
    # Use the appropriate runner for building your source code
    runs-on: ubuntu-latest
    steps:
      # Check out source code
      - name: Check Out Source Code
        uses: actions/checkout@v2
        with:
          # Fetch at least the immediate parents so that if this is a pull request then we can checkout the head.
          fetch-depth: 2
      # If this run was triggered by a pull request event, then checkout the head of the pull request instead of the merge commit.
      - run: git checkout HEAD^2
        if: ${{ github.event_name == 'pull_request' }}      
      # Java 11 or higher required by ScanCentral Client
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 17

      # Pull SAST issues from Fortify SSC and generate GitHub-optimized SARIF output
      - name: Export Results
        uses: fortify/gha-export-vulnerabilities@v1.0.1
        with:
          ssc_base_url: ${{ secrets.SSC_URL }}
          ssc_auth_token: ${{ secrets.SSC_UPLOAD_TOKEN }}
          ssc_version_id: ${{ secrets.SSC_VERSION_ID }}
      
      # Import Fortify SAST results to GitHub Security Code Scanning
      - name: Import Results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ./gh-fortify-sast.sarif

      # Archive sarif file
      - name: Upload Results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: sarif-files
          path: '**/*.sarif'
